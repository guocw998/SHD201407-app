##############################################################
# spring+hibernate+jpa整合到时候，javaconfig的方式避免了XML，配置文件会自动加载到Hibernate的环境中：Environment
# 在Properties p = org.hibernate.cfg.Environment.getProperties()中有所有hibernate.properties的属性。
# 
# 把Druid配置整合到这里声明
# 
##############################################################

#####################################################################################
###采用Druid连接池，下面的吉祥hibernate配置使用Druid的。
#
#hibernate.connection.url=jdbc:mysql://localhost:3306/superweb?useUnicode=true&characterEncoding=utf-8
#hibernate.connection.driver_class=com.mysql.jdbc.Driver
#hibernate.connection.username=root
#hibernate.connection.password=
#c3p0
#hibernate.connection.provider_class=org.hibernate.connection.C3P0ConnectionProvider
#####################################################################################

#####################################################################################
#####保留的hiber配置
#MYSQL
hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
#设置外连接抓取树的最大深度
hibernate.max_fetch_depth=3
#设定JDBC的Statement读取数据的时候每次从数据库中取出的记录条数。
hibernate.jdbc.fetch_size=50

hibernate.jdbc.batch_size=50
#自动建表类型 validate|create|create-drop|update
hibernate.hbm2ddl.auto=create-drop
#是否显示SQL 
hibernate.show_sql=true
#显示SQL是否格式化
hibernate.format_sql=true
#关闭二级缓存
hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider
#####################################################################################

#####################################################################################
#**********Druid配置**********
#Druid::注意这里配置的ConnectionProvider！！！ 第一次，配置错误了导致直接加不成功的异常！！
#hibernate.connection.provider_class=com.alibaba.druid.support.hibernate.DruidConnectionProvider
hibernate.connection.provider_class=com.urely.shd2014.DruidConnectionProvider


## 基本属性 url、user、password
url=jdbc:mysql://localhost:3306/superweb?useUnicode=true&characterEncoding=utf-8
username=root
password=
##数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass
driverClassName=com.mysql.jdbc.Driver

###pool settings
initialSize=0
maxActive=20
###已经不再使用，配置了也没效果
##maxIdle=20
##最小连接池数量
minIdle=3
##获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
maxWait=60000

##是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
poolPreparedStatements=false
##要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
maxOpenPreparedStatements=-1

#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
validationQuery=SELECT 'x'
testOnBorrow=false
testOnReturn=false
testWhileIdle=true

##有两个含义：1) Destroy线程会检测连接的间隔时间, 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
timeBetweenEvictionRunsMillis=60000

##不再使用，一个DruidDataSource只支持一个EvictionRun
#numTestsPerEvictionRun

#minEvictableIdleTimeMillis
#connectionInitSqls
#exceptionSorter

filters=stat
#proxyFilters
###Druid：：作者建议：：在上面的配置中，通常你需要配置url、username、password，maxActive这三项。
#####################################################################################
#关闭实体字段映射校验
#javax.persistence.validation.mode

#@see org.hibernate.cfg.Environment
#property	meaning
#hibernate.dialect	classname of org.hibernate.dialect.Dialect subclass
#hibernate.connection.provider_class	classname of ConnectionProvider subclass (if not specified hueristics are used)
#hibernate.connection.username	database username
#hibernate.connection.password	database password
#hibernate.connection.url	JDBC URL (when using java.sql.DriverManager)
#hibernate.connection.driver_class	classname of JDBC driver
#hibernate.connection.isolation	JDBC transaction isolation level (only when using java.sql.DriverManager)
#hibernate.connection.pool_size	the maximum size of the connection pool (only when using java.sql.DriverManager)
#hibernate.connection.datasource	databasource JNDI name (when using javax.sql.Datasource)
#hibernate.jndi.url	JNDI InitialContext URL
#hibernate.jndi.class	JNDI InitialContext classname

#hibernate.max_fetch_depth	maximum depth of outer join fetching
#hibernate.jdbc.batch_size	enable use of JDBC2 batch API for drivers which support it
#hibernate.jdbc.fetch_size	set the JDBC fetch size
#hibernate.jdbc.use_scrollable_resultset	enable use of JDBC2 scrollable resultsets (you only need this specify this property when using user supplied connections)
#hibernate.jdbc.use_getGeneratedKeys	enable use of JDBC3 PreparedStatement.getGeneratedKeys() to retrieve natively generated keys after insert. Requires JDBC3+ driver and JRE1.4+
#hibernate.hbm2ddl.auto	enable auto DDL export
#hibernate.default_schema	use given schema name for unqualified tables (always optional)
#hibernate.default_catalog	use given catalog name for unqualified tables (always optional)
#hibernate.session_factory_name	If set, the factory attempts to bind this name to itself in the JNDI context. This name is also used to support cross JVM Session (de)serialization.
#hibernate.transaction.jta.platform	classname of org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform implementor
#hibernate.transaction.factory_class	the factory to use for instantiating Transactions. (Defaults to JdbcTransactionFactory.)
#hibernate.query.substitutions	query language token substitutions